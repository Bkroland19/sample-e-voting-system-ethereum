{"version":3,"sources":["contexts/auth-context/action-types/index.ts","contexts/auth-context/data.ts","contexts/auth-context/reducer/index.ts","contexts/auth-context/auth-context-provider.tsx","contexts/vote-context/action-types/index.ts","contexts/auth-context/actions/index.ts","contexts/vote-context/actions/index.ts","contexts/vote-context/reducer/index.ts","contexts/vote-context/vote-context-provider.tsx","middlewares/private-route.tsx","components/landing-page-text.tsx","components/auth-popup.tsx","components/header.tsx","components/footer.tsx","components/layout.tsx","components/loader.tsx","components/text-fields/outline-text-field.tsx","repository/ballot.ts","repository/config.tsx","utils/util.ts","utils/toastMessage.ts","hooks/useVote.ts","pages/login/components/login-box.tsx","pages/login/index.tsx","pages/error/error-page.tsx","pages/voting-page/components/confirm-vote.tsx","pages/voting-page/index.tsx","pages/home/already-casted.tsx","pages/home/components/timer.tsx","pages/home/home.tsx","pages/landing-page/index.tsx","pages/results/data.ts","pages/results/index.tsx","routes/routes.tsx","App.tsx","index.tsx"],"names":["AUTH","initialState","aadharId","isUserLoggedIn","votedCandidate","data","Suresh","Ramesh","Mahesh","Raghu","Narendra","Krishna","Pratik","Aausi","Pratiba","Ruchika","Rambabu","Matajii","Mamata","Rahul","findAadharID","aadharID","Object","values","find","i","authReducer","state","action","type","SET_LOGIN_STATUS","payload","SET_AADHAR_ID","localStorage","setItem","RESET","removeItem","window","clear","AuthContext","createContext","dispatch","AuthContextProvider","children","useReducer","Provider","value","VOTING","useAuthContext","useContext","setLoginStatus","setAadharID","setLoading","SET_LOADING","castVotes","CAST_YOUR_VOTES","userVoterEligibility","IS_CANDIDATE_ELIGIBLE","allCandidates","voteTiming","checkVoteRes","undefined","loading","winnerCandidate","voteReducer","GET_ALL_CANDIDATE","SET_VOTE_TIME","canVote","error","CHECK_ALREADY_VOTED","GET_WINNER","checkVoteData","VoteContext","VoteContextProvider","useVoteContext","PrivateRoute","useLocation","userStatus","getItem","console","log","replace","to","from","pathname","MainText","Text","textAlign","color","letterSpacing","fontSize","base","md","display","AuthPopup","setShowBox","voteDispatch","navigate","useNavigate","Box","position","right","top","borderWidth","borderRadius","borderColor","width","zIndex","bgColor","padding","paddingBottom","Button","onPress","backgroundColor","_hover","bg","Header","useState","showBox","className","onClick","src","alt","Pressable","Avatar","size","source","uri","Footer","HStack","paddingX","paddingY","flexDirection","justifyContent","space","Link","textDecorationLine","_text","fontWeight","paddingTop","cursor","Layout","Center","minHeight","Loader","light","OutlineTextField","props","initialValue","handleOnChange","placeholder","rest","Input","variant","onChangeText","val","contractABI","require","BallotService","_ballotContract","_accountAdress","checkedWallet","a","ethereum","alert","enable","request","method","accounts","params","chainId","Number","toString","getBallotContract","this","contractAddress","signer","ethers","providers","Web3Provider","getSigner","Contract","voterAadharNumber","ethEnabled","getCandidateList","candidateList","voterAadharNo","isVoterEligible","isEligible","nominationNumber","secondsSinceEpoch","Math","round","Date","now","checkVoterVoted","castVote","vote","giveVote","castVoteRes","msg","name","partyShortcut","didCurrentVoterVoted","voted","userVoted_","candidate_","getResults","result","getVotingEndTime","voteDuration","instance","toastError","message","toast","POSITION","BOTTOM_CENTER","autoClose","draggablePercent","useVote","s1","getInstance","getAllCandidates","useCallback","listData","checkVoterEligibility","checkUserVotingStatus","voteStatus","candidate","castYourVote","success","getVoteTiming","getVotingTimeDuration","getResult","getElectionResult","winners","LoginBox","aadhar","setAadhar","otp","setOTP","setError","validate","length","curr","useEffect","w","h","overflow","shadow","flex","Heading","p","borderTopRadius","mt","VStack","FormControl","isInvalid","isRequired","ErrorMessage","userLogin","LoginPage","ErrorPage","mr","bold","my","alignSelf","ConfirmVote","modalVisible","setModalVisible","Modal","isOpen","onClose","Content","maxH","CloseButton","Body","Group","colorScheme","VotingPage","setValue","mb","alignItems","py","Icon","as","style","marginLeft","mx","ml","minH","map","item","isHovered","flexDir","px","partyFlag","height","isDisabled","AlreadyCasted","Timer","expiryTimestamp","onExpire","useTimer","seconds","minutes","hours","days","formatNumbers","num","HomePage","expire","setExpire","moment","unix","parseInt","format","LandingPage","states","constituency","ResultsPage","selectedState","setSelectedState","renderConstituencey","setRenderConstituencey","selectedConstituency","setSelectedConstituency","selectedCandidates","setSelectedCandidates","totalVoteCount","setTotalVoteCount","document","body","overflowY","keys","filter","stateCode","constituencyCode","candidateModel","d","voteCount","push","reduce","acc","Label","Select","accessibilityLabel","_selectedItem","endIcon","selectedValue","onValueChange","Item","label","borderBottomWidth","minW","borderRightWidth","Image","toFixed","Routes","path","element","App","ReactDOM","render","StrictMode","NativeBaseProvider","getElementById"],"mappings":"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","file":"static/js/main.20499fd4.chunk.js","sourcesContent":["export enum AUTH {\n  SET_LOGIN_STATUS = \"SET_LOGIN_STATUS\",\n  SET_VOTED_CANDIDATE = \"SET_VOTED_CANDIDATE\",\n  RESET = \"RESET\",\n  SET_AADHAR_ID = \"SET_AADHAR_ID\",\n}\n","import { InitialStateType } from \"./types\";\n\nexport const initialState: InitialStateType = {\n  aadharId: \"\",\n  isUserLoggedIn: false,\n  votedCandidate: \"\",\n};\n\nexport const data = {\n  Suresh: 482253918244,\n  Ramesh: 532122269467,\n  Mahesh: 468065932286,\n  Raghu: 760344621247,\n  Narendra: 908623597782,\n  Krishna: 809961147437,\n  \"Pushkar Kumar\": 908704156902,\n  \"Kunal Kumar\": 778925466180,\n  \"Kumar Sanket\": 393071790055,\n  Pratik: 983881786161,\n  Aausi: 756623869645,\n  Pratiba: 588109459505,\n  Ruchika: 967746320661,\n  Rambabu: 727938171119,\n  Matajii: 609015917688,\n  Mamata: 620107691388,\n  \"Ravi Varma\": 403561319377,\n  Rahul: 837970229674,\n};\n\nexport function findAadharID(aadharID: number) {\n  return !!Object.values(data).find((i) => i === aadharID);\n}\n","import { AUTH } from \"../action-types\";\nimport { initialState } from \"../data\";\nimport { AuthActions, InitialStateType } from \"../types\";\n\nexport function authReducer(\n  state: InitialStateType = initialState,\n  action: AuthActions\n) {\n  switch (action.type) {\n    case AUTH.SET_LOGIN_STATUS:\n      return { ...state, isUserLoggedIn: action.payload as boolean };\n\n    case AUTH.SET_AADHAR_ID: {\n      localStorage.setItem(\"LOGGEDIN_AADHAR_ID\", action.payload);\n      return {\n        ...state,\n        aadharId: action.payload as string,\n      };\n    }\n\n    case AUTH.RESET:\n      localStorage.removeItem(\"LOGGEDIN_AADHAR_ID\");\n      window.localStorage.clear();\n      return initialState;\n\n    default:\n      return state;\n  }\n}\nexport default authReducer;\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { authReducer } from \"./reducer\";\nimport { initialState } from \"./data\";\nimport { InitialStateType } from \"./types\";\n\nconst AuthContext = createContext<{\n  state: InitialStateType;\n  dispatch: React.Dispatch<any>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nexport function AuthContextProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\nexport default AuthContextProvider;\n\nexport const useAuthContext = () => useContext(AuthContext);\n","export enum VOTING {\n  GET_ALL_CANDIDATE = \"GET_ALL_CANDIDATE\",\n  CAST_YOUR_VOTES = \"CAST_YOUR_VOTES\",\n  CHECK_ALREADY_VOTED = \"CHECK_ALREADY_VOTED\",\n  GET_WINNER = \"GET_WINNER\",\n  SET_VOTED_CANDIDATE = \"SET_VOTED_CANDIDATE\",\n  SET_VOTE_TIME = \"SET_VOTE_TIME\",\n  IS_CANDIDATE_ELIGIBLE = \"IS_CANDIDATE_ELIGIBLE\",\n  SET_LOADING = \"SET_LOADING\",\n  RESET = \"RESET\",\n}\n","import { AUTH } from \"../action-types\";\n\nexport function setLoginStatus(payload: boolean) {\n  return {\n    type: AUTH.SET_LOGIN_STATUS,\n    payload,\n  };\n}\nexport function setAadharID(payload: string) {\n  return {\n    type: AUTH.SET_AADHAR_ID,\n    payload,\n  };\n}\n\nexport function setVotedCandidate(payload: string) {\n  return {\n    type: AUTH.SET_VOTED_CANDIDATE,\n    payload,\n  };\n}\n\nexport function resetStates() {\n  return {\n    type: AUTH.RESET,\n  };\n}\n","import {\n  Candidate,\n  CheckVoteStatusResponse,\n} from \"../../../repository/interfaces\";\nimport { VOTING } from \"../action-types\";\n\nexport function setLoading(payload: boolean) {\n  return {\n    type: VOTING.SET_LOADING,\n    payload,\n  };\n}\n\nexport function getAllCandidate(payload: Candidate[]) {\n  return {\n    type: VOTING.GET_ALL_CANDIDATE,\n    payload,\n  };\n}\n\nexport function castVotes(payload: Candidate) {\n  return {\n    type: VOTING.CAST_YOUR_VOTES,\n    payload,\n  };\n}\n\nexport function checkVoterVoted(payload: CheckVoteStatusResponse) {\n  return {\n    type: VOTING.CHECK_ALREADY_VOTED,\n    payload,\n  };\n}\nexport function setWinner(payload: Candidate[]) {\n  return {\n    type: VOTING.GET_WINNER,\n    payload,\n  };\n}\nexport function setVoteDuration(payload: string) {\n  return {\n    type: VOTING.SET_VOTE_TIME,\n    payload,\n  };\n}\nexport function userVoterEligibility(payload: boolean) {\n  return {\n    type: VOTING.IS_CANDIDATE_ELIGIBLE,\n    payload,\n  };\n}\n\nexport function resetVoteContextStates() {\n  return {\n    type: VOTING.RESET,\n  };\n}\n","import { VOTING } from \"../action-types\";\nimport { VoteActions, VoteStateType } from \"../types\";\n\nconst initialState: VoteStateType = {\n  allCandidates: [],\n  voteTiming: \"\",\n  checkVoteRes: undefined,\n  votedCandidate: undefined,\n  loading: false,\n  winnerCandidate: undefined,\n};\n\nexport function voteReducer(\n  state = initialState,\n  action: VoteActions\n): VoteStateType {\n  switch (action.type) {\n    case VOTING.SET_LOADING:\n      return { ...state, loading: action.payload };\n\n    case VOTING.GET_ALL_CANDIDATE:\n      return { ...state, allCandidates: action.payload };\n\n    case VOTING.SET_VOTE_TIME:\n      return { ...state, voteTiming: action.payload };\n\n    case VOTING.CAST_YOUR_VOTES:\n      return {\n        ...state,\n        votedCandidate: action.payload,\n        checkVoteRes: {\n          votedCandidate: action.payload,\n          canVote: false,\n          error: false,\n        },\n      };\n\n    case VOTING.CHECK_ALREADY_VOTED:\n      return {\n        ...state,\n        checkVoteRes: action.payload,\n        votedCandidate: undefined,\n      };\n\n    case VOTING.GET_WINNER:\n      return { ...state, winnerCandidate: action.payload };\n\n    case VOTING.IS_CANDIDATE_ELIGIBLE:\n      const checkVoteData = {\n        canVote: action.payload,\n        error: false,\n        votedCandidate: undefined,\n      };\n      return {\n        ...state,\n        checkVoteRes: checkVoteData,\n      };\n      \n    case VOTING.RESET:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\nexport default voteReducer;\n","import React, { createContext, useContext, useReducer } from \"react\";\nimport { voteReducer } from \"./reducer\";\nimport { VoteStateType } from \"./types\";\n\nconst VoteContext = createContext<{\n  state: VoteStateType;\n  dispatch: React.Dispatch<any>;\n}>({\n  state: {} as VoteStateType,\n  dispatch: () => null,\n});\n\nexport function VoteContextProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const [state, dispatch] = useReducer(voteReducer, {} as VoteStateType);\n\n  return (\n    <VoteContext.Provider value={{ state, dispatch }}>\n      {children}\n    </VoteContext.Provider>\n  );\n}\nexport default VoteContextProvider;\n\nexport const useVoteContext = () => useContext(VoteContext);\n","import { Navigate, useLocation } from \"react-router\";\nimport { useAuthContext } from \"../contexts\";\n\nconst PrivateRoute = ({ children }: { children: any }) => {\n  const {\n    state: { isUserLoggedIn },\n  } = useAuthContext();\n  const state = useLocation();\n\n  const userStatus = localStorage.getItem(\"LOGGEDIN_AADHAR_ID\");\n  // if (userStatus && !isUserLoggedIn) dispatch(setLoginStatus(true));\n\n  console.log(\"isUserLoggedIn\", \"private\");\n\n  return isUserLoggedIn || userStatus ? (\n    children\n  ) : (\n    <Navigate replace to=\"/login\" state={{ from: state.pathname }} />\n  );\n};\n\nexport default PrivateRoute;\n","import { Text } from \"native-base\";\nimport React from \"react\";\nexport const MainText = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <Text\n      textAlign=\"center\"\n      color=\"white\"\n      letterSpacing={2}\n      fontSize={{ base: \"xl\", md: \"7xl\" }}\n      display=\"block\">\n      {children}\n    </Text>\n  );\n};\n","import { Box, Button, Text } from \"native-base\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  resetStates,\n  useAuthContext,\n  useVoteContext,\n  resetVoteContextStates,\n} from \"../contexts\";\n\nexport const AuthPopup = ({ setShowBox }: { setShowBox: any }) => {\n  const {\n    state: { isUserLoggedIn, aadharId },\n    dispatch,\n  } = useAuthContext();\n  const { dispatch: voteDispatch } = useVoteContext();\n\n  let navigate = useNavigate();\n  return (\n    <Box\n      position=\"absolute\"\n      right={{ base: \"3\", md: 10 }}\n      top={20}\n      borderWidth={1}\n      borderRadius=\"md\"\n      borderColor=\"gray.300\"\n      width=\"300px\"\n      zIndex={3}\n      bgColor=\"darkBlue.900\"\n    >\n      <Box padding={4}>\n        {isUserLoggedIn && (\n          <Text color=\"white\" fontSize=\"2xl\" paddingBottom={2}>\n            Aadhar no : {aadharId}\n          </Text>\n        )}\n        {!isUserLoggedIn ? (\n          <Button\n            onPress={() => {\n              setShowBox(false);\n              navigate(\"/login\");\n            }}\n            bg={\"danger.600\"}\n          >\n            Login\n          </Button>\n        ) : (\n          <Button\n            onPress={() => {\n              setShowBox(false);\n              navigate(\"/\");\n              dispatch(resetStates());\n              voteDispatch(resetVoteContextStates());\n            }}\n            backgroundColor=\"red.500\"\n            _hover={{ bg: \"red.800\" }}\n          >\n            Logout\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n","import { Avatar, Pressable } from \"native-base\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { AuthPopup } from \"./auth-popup\";\n\nexport function Header() {\n  const [showBox, setShowBox] = useState(false);\n  let navigate = useNavigate();\n\n  return (\n    <>\n      <div className=\"header\">\n        <img\n          onClick={() => navigate(\"/\")}\n          src=\"https://results.eci.gov.in/ResultAcGenMar2022/img/logo.png\"\n          alt=\"logo\"\n        />\n        <Pressable onPress={() => setShowBox((showBox) => !showBox)}>\n          <Avatar\n            bg=\"indigo.500\"\n            size={{ base: \"md\", md: \"10\" }}\n            source={{\n              uri: \"https://images.unsplash.com/photo-1494790108377-be9c29b29330?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=687&q=8\",\n            }}\n          >\n            JB\n          </Avatar>\n        </Pressable>\n      </div>\n      {showBox && <AuthPopup setShowBox={setShowBox} />}\n    </>\n  );\n}\n","import { HStack, Link } from \"native-base\";\nimport { BsFacebook, BsInstagram, BsTwitter, BsYoutube } from \"react-icons/bs\";\n\nexport function Footer() {\n  return (\n    <HStack\n      paddingBottom={2}\n      paddingX={4}\n      paddingY={4}\n      flexDirection={{ base: \"column\", md: \"row\" }}\n      justifyContent=\"space-between\"\n    >\n      <HStack space={3} justifyContent={{ base: \"center\" }}>\n        <Link\n          textDecorationLine=\"none\"\n          _text={{\n            color: \"danger.500\",\n            fontWeight: \"medium\",\n            fontSize: \"xs\",\n          }}\n        >\n          Terms and conditions\n        </Link>\n        <Link\n          _text={{\n            color: \"danger.500\",\n            fontWeight: \"medium\",\n            fontSize: \"xs\",\n          }}\n          textDecorationLine=\"none\"\n        >\n          Privacy Policy\n        </Link>\n      </HStack>\n      <HStack\n        space={3}\n        justifyContent={{ base: \"center\" }}\n        paddingTop={{ base: \"3\" }}\n      >\n        <BsFacebook color=\"white\" size={25} className=\"logo-scale\" />\n        <BsInstagram color=\"white\" size={25} className=\"logo-scale\" />\n        <BsTwitter color=\"white\" size={30} className=\"logo-scale\" />\n        <BsYoutube\n          color=\"white\"\n          size={30}\n          cursor=\"pointer\"\n          className=\"logo-scale\"\n        />\n      </HStack>\n    </HStack>\n  );\n}\n","import { Box, Center } from \"native-base\";\nimport React from \"react\";\nimport \"./style.css\";\nimport { Header } from \"./header\";\nimport { Footer } from \"./footer\";\n\nexport const Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <Box position=\"relative\" bg=\"info.800\">\n      <Header />\n      <Center minHeight={[\"75vh\", \"77.7vh\"]}>{children}</Center>\n      <Footer />\n    </Box>\n  );\n};\n","export function Loader({ light }: { light?: boolean }) {\n  return (\n    <div className={`loader ${light ? \"loader-blue\" : \"\"}`}>\n      <h2>Loading</h2>\n      <span></span>\n      <span></span>\n      <span></span>\n    </div>\n  );\n}\n","import { Input } from \"native-base\";\nimport { TextFieldType } from \"./text-field.types\";\n\n/**\n * @param\n * Components mandatory props are initialValue, handleOnChange (callback function), placeholder, size\n * and for other props refere nativebase.io\n * */\n\nexport function OutlineTextField(props: TextFieldType) {\n  const { initialValue, handleOnChange, placeholder, ...rest } = props;\n  return (\n    <Input\n      {...rest}\n      variant=\"outline\"\n      value={initialValue}\n      onChangeText={(val) => handleOnChange(val)}\n      placeholder={placeholder}\n    />\n  );\n}\nexport default OutlineTextField;\n","// import Web3 from \"web3\";\n// import { Contract } from \"web3-eth-contract\";\nimport { getCurrentEpoch } from \"../utils/util\";\nimport { CONTRACT_ADDRESS } from \"./config\";\nimport {\n  Candidate,\n  CastVoteResponse,\n  CheckVoteStatusResponse,\n} from \"./interfaces\";\nimport { Contract, ethers } from \"ethers\";\nconst contractABI = require(\"./Ballot.json\");\n\ndeclare let window: any;\n\nexport class BallotService {\n  private static instance: BallotService;\n  private _ballotContract!: Contract;\n  private _accountAdress: string | undefined;\n  private constructor() {}\n\n  public static getInstance(): BallotService {\n    if (!BallotService.instance) {\n      BallotService.instance = new BallotService();\n    }\n\n    return BallotService.instance;\n  }\n  checkedWallet = async () => {\n    try {\n      const { ethereum } = window;\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return false;\n      }\n      await ethereum.enable();\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      await ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: `0x${Number(4).toString(16)}` }],\n      });\n      this._accountAdress = accounts[0];\n      this._ballotContract = this.getBallotContract(CONTRACT_ADDRESS);\n      return true;\n    } catch (error) {\n      console.log(error);\n      alert(error);\n      return false;\n    }\n  };\n\n  async ethEnabled() {\n    return await this.checkedWallet();\n  }\n\n  getBallotContract(contractAddress: string) {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    return new ethers.Contract(contractAddress, contractABI[\"abi\"], signer);\n  }\n\n  public async getAllCandidates(\n    voterAadharNumber: string\n  ): Promise<Candidate[]> {\n    try {\n      await this.ethEnabled();\n      const candidateList: Candidate[] =\n        await this._ballotContract.getCandidateList(voterAadharNumber);\n      return candidateList;\n    } catch (error) {\n      console.log(\"Error:\", error);\n      throw error;\n    }\n  }\n\n  async isVoterEligible(voterAadharNo: string): Promise<boolean> {\n    try {\n      await this.ethEnabled();\n      const isEligible: boolean = await this._ballotContract.isVoterEligible(\n        voterAadharNo\n      );\n      return isEligible;\n    } catch (error) {\n      console.log(\"Error:\", error);\n      throw error;\n    }\n  }\n\n  async castYourVote(\n    voterAadharNo: string,\n    nominationNumber: string\n  ): Promise<CastVoteResponse> {\n    try {\n      await this.ethEnabled();\n      const secondsSinceEpoch = getCurrentEpoch();\n      if (this._accountAdress === undefined) {\n        await this.ethEnabled();\n      }\n      let castVoteRes: CastVoteResponse;\n      const castVote = await this.checkVoterVoted(voterAadharNo);\n      console.log(castVote, \"castVote\", nominationNumber, voterAadharNo);\n      // Check if voter already casted his vote\n      if (castVote.canVote) {\n        const giveVote = await this._ballotContract.vote(\n          nominationNumber,\n          voterAadharNo,\n          secondsSinceEpoch\n        );\n        // .send();\n        console.log(\"vote Casted => \", giveVote);\n        castVoteRes = {\n          msg: \"You successfully casted your vote!\",\n          error: false,\n        };\n      } else {\n        castVoteRes = {\n          msg:\n            \"Already vote casted to\" +\n            castVote.votedCandidate?.name +\n            \" - \" +\n            castVote.votedCandidate?.partyShortcut,\n          error: false,\n        };\n      }\n      return castVoteRes;\n    } catch (error) {\n      console.log(\"Error:\", error);\n      throw error;\n    }\n  }\n\n  async checkVoterVoted(\n    voterAadharNo: string\n  ): Promise<CheckVoteStatusResponse> {\n    let votedCandidate: CheckVoteStatusResponse;\n    try {\n      await this.ethEnabled();\n      const voted = await this._ballotContract.didCurrentVoterVoted(\n        voterAadharNo\n      );\n      votedCandidate = {\n        canVote: !voted.userVoted_,\n        votedCandidate: voted.candidate_,\n        error: false,\n      };\n      return votedCandidate;\n    } catch (error) {\n      console.log(\"Error:\", error);\n      throw error;\n    }\n  }\n\n  async getElectionResult(): Promise<Candidate[]> {\n    try {\n      await this.ethEnabled();\n      // const secondsSinceEpoch = getCurrentEpoch();\n      const secondsSinceEpoch = 1900904953;\n      const result: Candidate[] = await this._ballotContract.getResults(\n        secondsSinceEpoch\n      );\n\n      return result;\n    } catch (error) {\n      console.log(\"Error:\", error);\n      throw error;\n    }\n  }\n\n  async getVotingTimeDuration(): Promise<string> {\n    try {\n      await this.ethEnabled();\n      const voteDuration = await this._ballotContract.getVotingEndTime();\n      console.log(voteDuration);\n      return voteDuration;\n    } catch (error) {\n      console.log(\"Error:\", error);\n      throw error;\n    }\n  }\n}\n","// export const BASE_URL =\n//   \"https://rinkeby.infura.io/v3/e0c0649106b74055b75eabebb028bc5f\";\n// export const ACCOUNT_ADDRESS = \"0x0E4074ebE2F3148149CE395c21828d8f6d104f84\";\n// export const GAS_FEE = 10000000;\n\nexport const CONTRACT_ADDRESS = \"0xeD4Ab31BD523402809CEB0D8D4073E8A736C76bE\";\n","export const getCurrentEpoch = () => {\n  const secondsSinceEpoch = Math.round(Date.now() / 1000);\n  return secondsSinceEpoch;\n};\n","import { toast } from \"react-toastify\";\n\nexport const toastSuccess = (message:string) => {\n  return toast.success(message, {\n    position: toast.POSITION.BOTTOM_CENTER,\n    autoClose: 1500,\n    draggablePercent: 60,\n  });\n};\n\n\nexport const toastError = (message:string) => {\n    return toast.error(message, {\n      position: toast.POSITION.BOTTOM_CENTER,\n      autoClose: 1500,\n      draggablePercent: 60,\n    });\n  };","import { useCallback } from \"react\";\nimport { BallotService } from \"../repository/ballot\";\nimport { Candidate } from \"../repository/interfaces\";\nimport {\n  getAllCandidate,\n  checkVoterVoted,\n  castVotes,\n  setVoteDuration,\n  userVoterEligibility,\n  setWinner,\n  setLoading,\n} from \"../contexts/vote-context\";\nimport { useVoteContext } from \"../contexts/vote-context/\";\nimport { toastError, toastSuccess } from \"../utils/toastMessage\";\nimport { useNavigate } from \"react-router\";\nimport { setAadharID, setLoginStatus } from \"../contexts\";\n\nexport const useVote = () => {\n  const s1 = BallotService.getInstance();\n  const { dispatch } = useVoteContext();\n  const navigate = useNavigate();\n\n  const getAllCandidates = useCallback(async (voterAadharNo) => {\n    try {\n      dispatch(setLoading(true));\n      const listData = await s1.getAllCandidates(voterAadharNo);\n      dispatch(getAllCandidate(listData));\n    } catch (error) {\n      toastError(\"Error while retrieving candidates\");\n    } finally {\n      dispatch(setLoading(false));\n    }\n  }, []);\n\n  const checkVoterEligibility = useCallback(async (voterAadharNo) => {\n    try {\n      const isVoterEligible = await s1.isVoterEligible(voterAadharNo);\n      if (isVoterEligible) {\n        dispatch(userVoterEligibility(isVoterEligible));\n\n        navigate(\"/home\");\n      } else {\n        toastError(\"User age is less than 18 years, therefore he can't vote!\");\n        window.localStorage.clear();\n        dispatch(setLoginStatus(false));\n        dispatch(userVoterEligibility(isVoterEligible));\n        navigate(\"/\");\n      }\n    } catch (e) {\n      console.log(e, \"e\");\n      toastError(\"Error while checking user details\");\n    }\n  }, []);\n\n  const checkUserVotingStatus = useCallback(async (voterAadharNo) => {\n    try {\n      const voteStatus = await s1.checkVoterVoted(voterAadharNo);\n      // console.log(voteStatus, \"voteStatus\");\n      if (voteStatus.canVote) {\n        dispatch(checkVoterVoted(voteStatus));\n      } else {\n        toastError(\"Your vote has been already registered\");\n        dispatch(userVoterEligibility(voteStatus.canVote));\n        voteStatus.votedCandidate &&\n          dispatch(castVotes(voteStatus.votedCandidate));\n      }\n    } catch (e) {\n      toastError(\"Error while checking user details\");\n    }\n  }, []);\n\n  const castVote = useCallback(\n    async (voterAadharNo: string, candidate: Candidate) => {\n      try {\n        console.log(candidate);\n        dispatch(setLoading(true));\n        const voteStatus = await s1.castYourVote(\n          voterAadharNo,\n          candidate.nominationNumber\n        );\n        if (voteStatus.error) {\n          toastError(voteStatus.msg);\n        } else {\n          dispatch(castVotes(candidate));\n          toastSuccess(voteStatus.msg);\n        }\n      } catch (e) {\n        toastError(\"Error while casting vote\");\n      } finally {\n        dispatch(setLoading(false));\n      }\n    },\n    []\n  );\n\n  const getVoteTiming = useCallback(async () => {\n    try {\n      dispatch(setLoading(true));\n      const voteTiming = await s1.getVotingTimeDuration();\n      dispatch(setVoteDuration(voteTiming));\n    } catch (e) {\n      toastError(\"Error while getting vote time\");\n    } finally {\n      dispatch(setLoading(false));\n    }\n  }, []);\n\n  const getResult = useCallback(async () => {\n    try {\n      dispatch(setLoading(true));\n      const winners = await s1.getElectionResult();\n      console.log(winners);\n      dispatch(setWinner(winners));\n    } catch (error) {\n      toastError(\"Error while getting results\");\n    } finally {\n      dispatch(setLoading(false));\n    }\n  }, []);\n\n  return {\n    castVote,\n    getAllCandidates,\n    checkUserVotingStatus,\n    getVoteTiming,\n    getResult,\n    checkVoterEligibility,\n  };\n};\n","import { Box, Button, Center, FormControl, Heading, VStack } from \"native-base\";\nimport { useNavigate } from \"react-router\";\nimport { useEffect, useState } from \"react\";\nimport { OutlineTextField } from \"../../../components/text-fields\";\nimport { findAadharID } from \"../../../contexts/auth-context/data\";\nimport {\n  useAuthContext,\n  setAadharID,\n  setLoginStatus,\n  useVoteContext,\n} from \"../../../contexts\";\nimport { useVote } from \"../../../hooks\";\nimport { BallotService } from \"../../../repository/ballot\";\nimport { toastError } from \"../../../utils/toastMessage\";\n\nexport const LoginBox = () => {\n  const [aadhar, setAadhar] = useState<string>(\"\");\n  const [otp, setOTP] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState({ aadhar: false, otp: false });\n  const navigate = useNavigate();\n  const { dispatch } = useAuthContext();\n  const {\n    state: { checkVoteRes },\n  } = useVoteContext();\n  const { checkVoterEligibility } = useVote();\n  const {\n    state: { isUserLoggedIn },\n  } = useAuthContext();\n\n  useEffect(() => {\n    if (isUserLoggedIn) {\n      navigate(\"/\");\n    }\n  }, []);\n\n  async function validate() {\n    if (aadhar.length < 12 || !findAadharID(+aadhar)) {\n      setError((curr) => ({ ...curr, aadhar: true }));\n      return false;\n    } else if (otp !== \"123456\") {\n      setError((curr) => ({ ...curr, otp: true }));\n      return false;\n    } else {\n      const isVoterEligible = await BallotService.getInstance().isVoterEligible(\n        aadhar\n      );\n      if (!isVoterEligible)\n        toastError(\n          \"User age is less than 18 years or User is dead, therefore he can't vote!\"\n        );\n      return isVoterEligible;\n    }\n    // return true;\n  }\n  async function userLogin() {\n    try {\n      setLoading(true);\n      if (await validate()) {\n        dispatch(setLoginStatus(true));\n        dispatch(setAadharID(aadhar));\n        navigate(\"/home\");\n        // checkVoterEligibility(aadhar);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n  return (\n    <Box\n      borderRadius={[3, 8]}\n      flexDirection={{ base: \"column\", md: \"row\" }}\n      w={{ base: \"100%\", md: \"50%\" }}\n      h={{ base: \"100%\", md: \"450\" }}\n      overflow=\"hidden\"\n      shadow=\"2\"\n    >\n      <Center\n        display={{ base: \"none\", md: \"flex\" }}\n        bgColor=\"info.600\"\n        flex=\"50%\"\n      >\n        <Heading color=\"white\">E-Voting</Heading>\n      </Center>\n      <Box\n        justifyContent=\"center\"\n        bgColor=\"white\"\n        p={5}\n        flex={{ base: \"80%\", md: \"50%\" }}\n        borderTopRadius={{ base: 8, md: 0 }}\n      >\n        <Heading textAlign=\"left\" mt=\"4\" fontWeight=\"medium\" size=\"xs\">\n          Log in to continue!\n        </Heading>\n\n        <VStack space={{ base: \"6\", md: \"3\" }} mt=\"5\">\n          <FormControl isInvalid={error.aadhar} isRequired>\n            <OutlineTextField\n              type=\"email\"\n              placeholder=\"Enter AADHAR card no.\"\n              initialValue={aadhar}\n              handleOnChange={setAadhar}\n            />\n\n            <FormControl.ErrorMessage>\n              invalid aadhaar id\n            </FormControl.ErrorMessage>\n          </FormControl>\n          <FormControl isInvalid={error.otp} isRequired>\n            <OutlineTextField\n              type=\"text\"\n              placeholder=\"Enter OTP\"\n              initialValue={otp}\n              handleOnChange={setOTP}\n            />\n            <FormControl.ErrorMessage>invalid OTP</FormControl.ErrorMessage>\n          </FormControl>\n          {loading ? (\n            <Button bg={\"danger.600\"}>Logging In...</Button>\n          ) : (\n            <Button\n              w={\"20\"}\n              bg={\"danger.600\"}\n              color=\"white\"\n              onPress={() => userLogin()}\n            >\n              LOG IN\n            </Button>\n          )}\n        </VStack>\n      </Box>\n    </Box>\n  );\n};\n","import { Layout } from \"../../components\";\nimport { LoginBox } from \"./components\";\n\nexport function LoginPage() {\n  return (\n    <Layout>\n      <LoginBox />\n    </Layout>\n  );\n}\nexport default LoginPage;\n","import { Button, Center, Container, Heading, Text } from \"native-base\";\nimport { Link } from \"react-router-dom\";\nimport { Layout } from \"../../components\";\n\nexport function ErrorPage() {\n  return (\n    <Layout>\n      <Center>\n        <Heading color=\"white\">\n          {\" \"}\n          <Text color=\"coolGray.300\" mr=\"2\" fontSize=\"4xl\" bold>\n            404\n          </Text>{\" \"}\n          Page Not Found\n        </Heading>\n        <Text fontSize=\"2xl\" color=\"white\" fontWeight=\"normal\">\n          Please check the url in the address bar and try again\n        </Text>\n        <Link to=\"/\">\n          <Button my=\"2\" alignSelf=\"center\">\n            Go back Home\n          </Button>\n        </Link>\n      </Center>\n    </Layout>\n  );\n}\n","import { Button, Modal, Text } from \"native-base\";\nimport { useNavigate } from \"react-router\";\nimport { useAuthContext } from \"../../../contexts\";\nimport { useVote } from \"../../../hooks\";\nimport { Candidate } from \"../../../repository/interfaces\";\n\nexport function ConfirmVote({\n  modalVisible,\n  setModalVisible,\n  candidate,\n}: {\n  modalVisible: boolean;\n  setModalVisible: Function;\n  candidate: Candidate;\n}) {\n  let navigate = useNavigate();\n  const {\n    state: { aadharId },\n  } = useAuthContext();\n  const { castVote } = useVote();\n\n  async function handleOnClick() {\n    try {\n      setModalVisible(false);\n      await castVote(aadharId, candidate);\n      return navigate(\"/home\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <Modal isOpen={modalVisible} onClose={setModalVisible} size={\"md\"}>\n      <Modal.Content maxH=\"212\">\n        <Modal.CloseButton />\n        <Modal.Header>VOTE Policy</Modal.Header>\n        <Modal.Body>\n          <Text>This action can not be undone!</Text>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button.Group space={2}>\n            <Button\n              variant=\"ghost\"\n              colorScheme=\"blueGray\"\n              onPress={() => {\n                setModalVisible(false);\n              }}\n            >\n              cancel\n            </Button>\n            <Button bg={\"danger.600\"} onPress={handleOnClick}>\n              ok\n            </Button>\n          </Button.Group>\n        </Modal.Footer>\n      </Modal.Content>\n    </Modal>\n  );\n}\n","import {\n  Box,\n  Button,\n  Heading,\n  HStack,\n  Icon,\n  Pressable,\n  Text,\n  VStack,\n} from \"native-base\";\nimport { useEffect, useState } from \"react\";\nimport { BsCheckCircleFill } from \"react-icons/bs\";\nimport { MdOutlineArrowBack } from \"react-icons/md\";\nimport { useNavigate } from \"react-router\";\nimport { Layout, Loader } from \"../../components\";\nimport { useAuthContext, useVoteContext } from \"../../contexts\";\nimport { useVote } from \"../../hooks\";\nimport { Candidate } from \"../../repository/interfaces\";\nimport { ConfirmVote } from \"./components\";\n\nexport function VotingPage() {\n  const {\n    state: { aadharId },\n  } = useAuthContext();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [value, setValue] = useState<Candidate>();\n  let navigate = useNavigate();\n  const {\n    state: { allCandidates, votedCandidate, loading },\n  } = useVoteContext();\n\n  const { getAllCandidates } = useVote();\n\n  useEffect(() => {\n    if (votedCandidate && votedCandidate.name !== \"\") {\n      navigate(\"/\");\n    }\n    getAllCandidates(aadharId);\n  }, []);\n\n  return (\n    <Layout>\n      <VStack w=\"100vw\" mb={[\"100\"]}>\n        <HStack\n          position={\"fixed\"}\n          top={[\"80px\", \"100\"]}\n          zIndex={100}\n          bg=\"info.900\"\n          alignItems={\"center\"}\n          w=\"100vw\"\n          py=\"5\"\n        >\n          <Icon\n            as={\n              <MdOutlineArrowBack\n                cursor={\"pointer\"}\n                onClick={() => navigate(\"/\")}\n                style={{\n                  color: \"white\",\n                  fontSize: \"2rem\",\n                  marginLeft: \"1rem\",\n                  cursor: \"pointer\",\n                }}\n              />\n            }\n          />\n          <Heading\n            mx=\"auto\"\n            ml={[\"0\", \"auto\"]}\n            color={\"white\"}\n            alignSelf={\"center\"}\n          >\n            Vote\n          </Heading>\n        </HStack>\n        <VStack\n          position={\"relative\"}\n          justifyContent={\"center\"}\n          alignItems=\"center\"\n          minH=\"60vh\"\n          mt=\"100\"\n        >\n          <>\n            {loading ? (\n              <Loader light={true} />\n            ) : allCandidates && allCandidates.length !== 0 ? (\n              <>\n                <VStack alignItems={\"center\"}>\n                  {allCandidates.map((item) => (\n                    <Pressable onPress={() => setValue(item)}>\n                      {({ isHovered }) => (\n                        <Box\n                          display=\"flex\"\n                          alignItems={\"center\"}\n                          flexDir={\"row\"}\n                          bg={\n                            (value && isHovered) || item.name === value?.name\n                              ? \"info.700\"\n                              : \"white\"\n                          }\n                          fontSize={\"lg\"}\n                          mt=\"4\"\n                          p=\"2\"\n                          px=\"5\"\n                          w={[\"90vw\", \"30vw\"]}\n                          borderRadius={\"6\"}\n                          justifyContent=\"space-between\"\n                        >\n                          <HStack alignItems={\"center\"}>\n                            <img\n                              key={item.partyFlag}\n                              src={item.partyFlag}\n                              width=\"60\"\n                              style={{ height: \"60px\" }}\n                              alt=\"party flag\"\n                            />\n                            <Text\n                              color={\n                                (value && isHovered) ||\n                                item.name === value?.name\n                                  ? \"white\"\n                                  : \"black\"\n                              }\n                              fontSize={[\"sm\", \"xl\"]}\n                              bold\n                            >\n                              &#160;&#160; {item.name} - {item.partyShortcut}\n                            </Text>\n                          </HStack>\n                          {value && item.name === value.name && (\n                            <BsCheckCircleFill size=\"30\" color=\"white\" />\n                          )}\n                        </Box>\n                      )}\n                    </Pressable>\n                  ))}\n                  <Button\n                    alignSelf={\"center\"}\n                    onPress={() => setModalVisible(true)}\n                    isDisabled={!value ? true : false}\n                    bg={\"danger.600\"}\n                    w=\"100\"\n                    mt=\"10\"\n                  >\n                    vote\n                  </Button>\n                </VStack>\n              </>\n            ) : (\n              <>\n                <Heading\n                  color=\"white\"\n                  size={[\"sm\", \"xl\"]}\n                  textAlign=\"center\"\n                  mb=\"4\"\n                  fontWeight={\"semibold\"}\n                >\n                  {allCandidates === undefined || !allCandidates.length ? (\n                    <Box>\n                      No candidate found at your Constituency Area\n                      <br /> Please Try Again Later\n                    </Box>\n                  ) : (\n                    <Box></Box>\n                  )}\n                </Heading>\n                <Button\n                  bg={\"danger.600\"}\n                  color=\"white\"\n                  onPress={() => navigate(\"/home\")}\n                  ml={[\"0\", \"5\"]}\n                >\n                  <Text fontSize={[\"10\", \"20\"]} color=\"white\">\n                    Go back to Home\n                  </Text>\n                </Button>\n              </>\n            )}\n          </>\n        </VStack>\n      </VStack>\n      {value && (\n        <ConfirmVote\n          candidate={value}\n          setModalVisible={setModalVisible}\n          modalVisible={modalVisible}\n        />\n      )}\n    </Layout>\n  );\n}\nexport default VotingPage;\n","import { HStack, Box, Text, VStack } from \"native-base\";\nimport { Layout } from \"../../components\";\nimport { useVoteContext } from \"../../contexts\";\n\nexport const AlreadyCasted = () => {\n  const {\n    state: { votedCandidate },\n  } = useVoteContext();\n\n  return (\n    <Layout>\n      <HStack>\n        <Box>\n          <Text\n            color=\"white\"\n            textAlign={\"center\"}\n            letterSpacing={2}\n            fontSize={{ base: \"3xl\", md: \"7xl\" }}\n          >\n            Vote casted\n          </Text>\n          <VStack justifyContent={\"center\"} alignItems=\"center\">\n            <Text fontSize={{ base: \"md\", md: \"3xl\" }} color=\"white\">\n              to\n            </Text>\n            <Text\n              mt=\"4\"\n              fontSize={{ base: \"3xl\", md: \"7xl\" }}\n              color=\"white\"\n              px=\"4\"\n              borderRadius={\"xl\"}\n              bg=\"danger.600\"\n            >\n              {votedCandidate && votedCandidate.name}\n            </Text>\n          </VStack>\n        </Box>\n      </HStack>\n    </Layout>\n  );\n};\n","import { HStack, Text } from \"native-base\";\nimport { useTimer } from \"react-timer-hook\";\n\nexport function Timer({\n  expiryTimestamp,\n  onExpire,\n}: {\n  expiryTimestamp: Date;\n  onExpire: Function;\n}) {\n  const { seconds, minutes, hours, days } = useTimer({\n    expiryTimestamp,\n    onExpire: () => onExpire(),\n  });\n\n  const formatNumbers = (num: number) => {\n    if (num < 10) {\n      return `0${num}`;\n    } else {\n      return num;\n    }\n  };\n\n  return (\n    <HStack\n      space={1}\n      bg=\"coolGray.700\"\n      alignItems=\"baseline\"\n      px={3}\n      borderRadius=\"8px\"\n    >\n      <Text color=\"white\" fontSize={{ base: \"xl\", md: \"5xl\" }}>\n        {formatNumbers(days)}:{formatNumbers(hours)}:{formatNumbers(minutes)}:\n        {formatNumbers(seconds)}\n      </Text>\n    </HStack>\n  );\n}\n","import { Button, Text, VStack } from \"native-base\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Timer } from \"./components\";\nimport { Layout, Loader, MainText } from \"../../components\";\nimport { useEffect, useState } from \"react\";\nimport { useAuthContext, useVoteContext } from \"../../contexts\";\nimport \"./style.css\";\nimport { useVote } from \"../../hooks\";\nimport moment from \"moment\";\n\nexport function HomePage() {\n  const {\n    state: { isUserLoggedIn, aadharId },\n  } = useAuthContext();\n\n  const {\n    state: { checkVoteRes, voteTiming, loading },\n  } = useVoteContext();\n  const { checkUserVotingStatus, getVoteTiming } = useVote();\n  const [expire, setExpire] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isUserLoggedIn) {\n      checkUserVotingStatus(aadharId);\n      getVoteTiming();\n    }\n  }, [isUserLoggedIn]);\n  // useEffect(() => {}, [voteTiming]);\n  return (\n    <Layout>\n      <VStack justifyContent={\"center\"} alignItems=\"center\">\n        {loading ? (\n          <Loader light={true} />\n        ) : (\n          voteTiming && (\n            <>\n              <MainText>\n                {expire ? \"Results are out now!\" : \"Cast Your Vote\"}\n              </MainText>\n              <VStack justifyContent={\"center\"} alignItems=\"center\">\n                {expire ? (\n                  <>\n                    <Button\n                      bg={\"danger.600\"}\n                      onPress={() => navigate(\"/results\")}\n                      alignSelf={\"center\"}\n                      mt=\"5\"\n                    >\n                      Check now\n                    </Button>\n                  </>\n                ) : (\n                  <>\n                    <Text\n                      color=\"white\"\n                      mb=\"5\"\n                      fontSize={{ base: \"md\", md: \"3xl\" }}\n                    >\n                      before\n                    </Text>\n                    <Timer\n                      expiryTimestamp={\n                        new Date(\n                          moment\n                            .unix(parseInt(voteTiming?.toString()))\n                            .format(\"MM-DD-YYYY\")\n                        )\n                      }\n                      onExpire={() => setExpire(true)}\n                    />\n                    <Button\n                      bg={\"danger.600\"}\n                      onPress={() =>\n                        checkVoteRes &&\n                        navigate(checkVoteRes.canVote ? \"/vote\" : \"/home\")\n                      }\n                      alignSelf={\"center\"}\n                      mt=\"5\"\n                    >\n                      Vote Now\n                    </Button>\n                  </>\n                )}\n              </VStack>\n            </>\n          )\n        )}\n      </VStack>\n    </Layout>\n  );\n}\n","import { Button, HStack, Text, VStack } from \"native-base\";\nimport { useNavigate } from \"react-router\";\nimport { Layout, MainText } from \"../../components\";\nimport { useAuthContext } from \"../../contexts\";\nexport function LandingPage() {\n  const {\n    state: { isUserLoggedIn, aadharId },\n  } = useAuthContext();\n  let navigate = useNavigate();\n\n  return (\n    <Layout>\n      <div className=\"image-bg\">\n        <VStack justifyContent={\"center\"} alignItems=\"center\">\n          <MainText>Welcome to E-voting</MainText>\n          <HStack>\n            <Button\n              bg={\"danger.600\"}\n              color=\"white\"\n              onPress={() =>\n                isUserLoggedIn ? navigate(\"/home\") : navigate(\"/login\")\n              }\n            >\n              {!isUserLoggedIn ? (\n                <Text fontSize={[\"10\", \"20\"]} color=\"white\">\n                  Log In\n                </Text>\n              ) : (\n                <Text fontSize={[\"10\", \"20\"]} color=\"white\">\n                  Start Voting\n                </Text>\n              )}\n            </Button>\n            <Button\n              bg={\"danger.600\"}\n              color=\"white\"\n              onPress={() => navigate(\"/results\")}\n              ml={[\"0\", \"5\"]}\n            >\n              <Text fontSize={[\"10\", \"20\"]} color=\"white\">\n                View Results\n              </Text>\n            </Button>\n          </HStack>\n        </VStack>\n      </div>\n    </Layout>\n  );\n}\n","export const states: any = {\n  \"10\": \"Andhra Pradesh\",\n  \"11\": \"Bihar\",\n};\nexport const constituency: any = {\n  \"10\": {\n    \"1\": \"Guntur\",\n    \"2\": \"Krishna\",\n  },\n  \"11\": {\n    \"1\": \"Patna\",\n    \"2\": \"Dehri\",\n  },\n};\n","import {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  Heading,\n  HStack,\n  Image,\n  Select,\n  Text,\n  VStack,\n} from \"native-base\";\nimport { BsCheckCircle } from \"react-icons/bs\";\nimport { Layout, Loader } from \"../../components\";\nimport { constituency, states } from \"./data\";\nimport { useEffect, useState } from \"react\";\nimport { Candidate } from \"../../repository/interfaces\";\nimport { useNavigate } from \"react-router\";\nimport { useVote } from \"../../hooks\";\nimport { useVoteContext } from \"../../contexts\";\n\nexport function ResultsPage() {\n  const [selectedState, setSelectedState] = useState(10);\n  const [renderConstituencey, setRenderConstituencey] = useState([\"\"]);\n  const [selectedConstituency, setSelectedConstituency] = useState(1);\n  const [selectedCandidates, setSelectedCandidates] = useState<Candidate[]>();\n  const [totalVoteCount, setTotalVoteCount] = useState(0);\n  const navigate = useNavigate();\n  const {\n    state: { winnerCandidate, loading },\n  } = useVoteContext();\n  const { getResult } = useVote();\n  useEffect(() => {\n    document.body.style.overflowY = \"scroll\";\n    getResult();\n  }, []);\n\n  useEffect(() => {\n    if (selectedState !== undefined) {\n      setRenderConstituencey(Object.keys(constituency[selectedState] ?? []));\n    }\n  }, [selectedState]);\n\n  useEffect(() => {\n    setSelectedConstituency(parseInt(renderConstituencey[0]));\n  }, [renderConstituencey]);\n\n  useEffect(() => {\n    let data =\n      winnerCandidate &&\n      winnerCandidate.filter((i) => {\n        return (\n          i.stateCode === selectedState &&\n          i.constituencyCode === selectedConstituency\n        );\n      });\n\n    if (data) {\n      var candidateModel: Candidate[] = [];\n      for (let i = 0; i < data.length; i++) {\n        let d = { ...data[i] };\n        d.nominationNumber = data[i].nominationNumber.toString();\n        d.voteCount = data[i].voteCount.toString();\n        console.log(d);\n        candidateModel?.push(d);\n      }\n\n      setSelectedCandidates(candidateModel);\n\n      setTotalVoteCount(\n        candidateModel.reduce((acc, { voteCount }) => (acc += +voteCount), 0)\n      );\n    }\n  }, [selectedState, selectedConstituency, winnerCandidate]);\n\n  return (\n    <Layout>\n      <VStack\n        minH={\"70vh\"}\n        w={[\"90vw\", \"70vw\"]}\n        alignItems={\"center\"}\n        justifyContent=\"center\"\n        bg=\"white\"\n        borderRadius={\"8\"}\n        shadow={\"lg\"}\n        py=\"8\"\n        mt=\"10\"\n      >\n        <Heading size={[\"sm\"]} textAlign=\"center\">\n          GEN ELECTION TO VIDHAN SABHA TRENDS & RESULT MARCH-2022\n        </Heading>\n        <Box\n          p=\"2\"\n          mt=\"4\"\n          borderWidth={\"1\"}\n          w={[\"80%\", \"60vw\", \"80%\"]}\n          borderColor={\"black\"}\n        >\n          <Text\n            textAlign={\"center\"}\n            fontWeight=\"semibold\"\n            fontSize={\"md\"}\n            mb=\"4\"\n          >\n            Constituencywise-All Candidates\n          </Text>\n          <HStack justifyContent={\"center\"} flexDir={[\"column\", \"row\"]}>\n            <FormControl\n              w={\"container\"}\n              alignItems=\"center\"\n              display={\"flex\"}\n              flexDir=\"row\"\n            >\n              <FormControl.Label mt=\"2\">Select State  </FormControl.Label>\n              <Box>\n                <Select\n                  accessibilityLabel=\"Select State\"\n                  placeholder=\"Select State\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <BsCheckCircle size={5} />,\n                  }}\n                  w={[\"40\", \"full\"]}\n                  selectedValue={selectedState.toString()}\n                  onValueChange={(state) => setSelectedState(parseInt(state))}\n                >\n                  {Object.keys(states).map((state) => (\n                    <Select.Item label={states[state]} value={state} />\n                  ))}\n                </Select>\n              </Box>\n            </FormControl>\n            <FormControl\n              ml={[\"0\", \"4\"]}\n              w={\"container\"}\n              alignItems=\"center\"\n              display={\"flex\"}\n              flexDir=\"row\"\n            >\n              <FormControl.Label mt=\"2\">Select Constituency  </FormControl.Label>\n              <Box>\n                <Select\n                  w={[\"20\", \"full\"]}\n                  accessibilityLabel=\"Select Constituency\"\n                  placeholder=\"Select Constituency\"\n                  _selectedItem={{\n                    bg: \"teal.600\",\n                    endIcon: <BsCheckCircle size={5} />,\n                  }}\n                  selectedValue={selectedConstituency.toString()}\n                  onValueChange={(constituency) =>\n                    setSelectedConstituency(parseInt(constituency))\n                  }\n                >\n                  {renderConstituencey.length !== 0 &&\n                    renderConstituencey.map((i) => (\n                      <Select.Item\n                        label={constituency[selectedState][i]}\n                        value={i}\n                      />\n                    ))}\n                </Select>\n              </Box>\n            </FormControl>\n          </HStack>\n        </Box>\n        {/* table */}\n        <Box borderWidth={\"1\"} borderBottomWidth=\"0\" w=\"80%\" mt=\"6\">\n          <Box py=\"1\" bg=\"error.200\" borderBottomWidth={\"2\"} textAlign=\"center\">\n            <Text fontWeight={\"semibold\"}>\n              {states[selectedState]}-\n              {constituency[selectedState][selectedConstituency]}\n            </Text>\n          </Box>\n          <Box py=\"1\" bg=\"error.200\" borderBottomWidth={\"2\"} textAlign=\"center\">\n            <Text fontWeight={\"semibold\"}>Result Status</Text>\n          </Box>\n          <Box overflow={[\"scroll\", \"unset\"]}>\n            <HStack>\n              <Box\n                py=\"1\"\n                bg=\"error.200\"\n                borderBottomWidth=\"2\"\n                minW={[\"70\", \"16%\"]}\n                borderRightWidth=\"2\"\n                textAlign=\"center\"\n              >\n                <Text fontWeight={\"semibold\"}>O.S.N.</Text>\n              </Box>\n              <Box\n                py=\"1\"\n                bg=\"error.200\"\n                textAlign=\"center\"\n                borderBottomWidth=\"2\"\n                minW={[\"235\", \"20%\"]}\n                borderRightWidth=\"2\"\n              >\n                <Text fontWeight={\"semibold\"}>Candidate </Text>\n              </Box>\n              <Box\n                py=\"1\"\n                bg=\"error.200\"\n                borderBottomWidth=\"2\"\n                minW={[\"200\", \"16%\"]}\n                borderRightWidth=\"2\"\n                textAlign=\"center\"\n              >\n                <Text fontWeight={\"semibold\"}>Party</Text>\n              </Box>\n              <Box\n                py=\"1\"\n                bg=\"error.200\"\n                borderBottomWidth=\"2\"\n                minW={[\"100\", \"16%\"]}\n                borderRightWidth=\"2\"\n                textAlign=\"center\"\n              >\n                <Text fontWeight={\"semibold\"}>Party Symbol</Text>\n              </Box>\n\n              <Box\n                py=\"1\"\n                bg=\"error.200\"\n                borderBottomWidth=\"2\"\n                minW={[\"100\", \"16%\"]}\n                borderRightWidth=\"2\"\n                textAlign=\"center\"\n              >\n                <Text fontWeight={\"semibold\"}>Votes </Text>\n              </Box>\n\n              <Box\n                py=\"1\"\n                bg=\"error.200\"\n                borderBottomWidth=\"2\"\n                minW={[\"100\", \"16%\"]}\n                borderRightWidth=\"2\"\n                textAlign=\"center\"\n              >\n                <Text fontWeight={\"semibold\"}>% of Votes</Text>\n              </Box>\n            </HStack>\n            {loading ? (\n              <Loader />\n            ) : selectedCandidates && selectedCandidates.length !== 0 ? (\n              selectedCandidates.map(\n                ({\n                  nominationNumber,\n                  name,\n                  partyShortcut,\n                  partyFlag,\n                  voteCount,\n                }) => (\n                  <HStack>\n                    <Box\n                      py=\"1\"\n                      w={[\"70\", \"16%\"]}\n                      borderBottomWidth=\"2\"\n                      borderRightWidth=\"2\"\n                      textAlign=\"center\"\n                    >\n                      <Text fontWeight={\"semibold\"}>{nominationNumber}</Text>\n                    </Box>\n                    <Box\n                      py=\"1\"\n                      textAlign=\"center\"\n                      w={[\"235\", \"20%\"]}\n                      borderBottomWidth=\"2\"\n                      borderRightWidth=\"2\"\n                    >\n                      <Text fontWeight={\"semibold\"}>{name}</Text>\n                    </Box>\n                    <Box\n                      py=\"1\"\n                      w={[\"200\", \"16%\"]}\n                      borderBottomWidth=\"2\"\n                      borderRightWidth=\"2\"\n                      textAlign=\"center\"\n                    >\n                      <Text fontWeight={\"semibold\"}>{partyShortcut}</Text>\n                    </Box>\n                    <Box\n                      py=\"1\"\n                      w={[\"100\", \"16%\"]}\n                      borderBottomWidth=\"2\"\n                      borderRightWidth=\"2\"\n                      textAlign=\"center\"\n                    >\n                      <Image\n                        source={{ uri: partyFlag }}\n                        mx=\"auto\"\n                        size=\"md\"\n                        alt={partyShortcut}\n                      ></Image>\n                    </Box>\n                    <Box\n                      py=\"1\"\n                      w={[\"100\", \"16%\"]}\n                      borderBottomWidth=\"2\"\n                      borderRightWidth=\"2\"\n                      textAlign=\"center\"\n                    >\n                      <Text fontWeight={\"semibold\"}>{voteCount}</Text>\n                    </Box>\n                    <Box\n                      py=\"1\"\n                      w={[\"100\", \"16%\"]}\n                      borderBottomWidth=\"2\"\n                      borderRightWidth=\"2\"\n                      textAlign=\"center\"\n                    >\n                      <Text fontWeight={\"semibold\"}>\n                        {((+voteCount / +totalVoteCount) * 100).toFixed(2)}\n                      </Text>\n                    </Box>\n                  </HStack>\n                )\n              )\n            ) : (\n              <VStack alignItems={\"center\"}>\n                <Heading textAlign={\"center\"} mt=\"5\">\n                  Result will be shown here!\n                </Heading>\n                <Button\n                  bg={\"danger.600\"}\n                  color=\"white\"\n                  onPress={() => navigate(\"/\")}\n                  mt={[\"2\", \"5\"]}\n                >\n                  <Text fontSize={[\"10\", \"20\"]} color=\"white\">\n                    Go back to Home\n                  </Text>\n                </Button>\n              </VStack>\n            )}\n          </Box>\n        </Box>\n      </VStack>\n    </Layout>\n  );\n}\n","import { Route, Routes as ParentRoutes } from \"react-router\";\nimport PrivateRoute from \"../middlewares/private-route\";\nimport LoginPage from \"../pages/login\";\nimport { ErrorPage } from \"../pages/error/error-page\";\nimport { VotingPage } from \"../pages/voting-page\";\nimport { AlreadyCasted, HomePage } from \"../pages/home\";\nimport {\n  useVoteContext,\n  useAuthContext,\n  setLoginStatus,\n  setAadharID,\n} from \"../contexts\";\nimport { LandingPage } from \"../pages/landing-page\";\nimport { ResultsPage } from \"../pages/results\";\n\nconst Routes = () => {\n  const {\n    state: { checkVoteRes },\n  } = useVoteContext();\n  const {\n    state: { isUserLoggedIn },\n    dispatch,\n  } = useAuthContext();\n  const userStatus = localStorage.getItem(\"LOGGEDIN_AADHAR_ID\");\n  if (userStatus && !isUserLoggedIn) {\n    dispatch(setLoginStatus(true));\n    dispatch(setAadharID(userStatus));\n  }\n\n  return (\n    <ParentRoutes>\n      <Route path=\"/\" element={<LandingPage />} />\n\n      <Route path=\"/login\" element={<LoginPage />} />\n      <Route path=\"/*\" element={<ErrorPage />} />\n      <Route path=\"/results\" element={<ResultsPage />} />\n      <Route\n        path=\"/home\"\n        element={\n          <PrivateRoute>\n            {checkVoteRes && !checkVoteRes.canVote ? (\n              <AlreadyCasted />\n            ) : (\n              <HomePage />\n            )}\n          </PrivateRoute>\n        }\n      />\n      <Route\n        path=\"/vote\"\n        element={\n          <PrivateRoute>\n            <VotingPage />\n          </PrivateRoute>\n        }\n      />\n    </ParentRoutes>\n  );\n};\n\nexport default Routes;\n","import Routes from \"./routes/routes\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { NativeBaseProvider } from \"native-base\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { AuthContextProvider } from \"./contexts/auth-context/\";\nimport { VoteContextProvider } from \"./contexts\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <VoteContextProvider>\n        <NativeBaseProvider>\n          <Router>\n            <App />\n          </Router>\n        </NativeBaseProvider>\n      </VoteContextProvider>\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}